From: Reinhard Tartler
Subject: Avoid format security warning and build breakage

---
 lavtools/jpeg2yuv.c    |    2 +-
 lavtools/lav_io.c      |    2 +-
 lavtools/lavtrans.c    |    4 ++--
 mplex/main.cpp         |    2 +-
 yuvfilters/main.c      |    4 ++--
 yuvfilters/yuvkineco.c |    2 +-
 6 files changed, 8 insertions(+), 8 deletions(-)

--- mjpegtools.orig/lavtools/lav_io.c
+++ mjpegtools/lavtools/lav_io.c
@@ -926,7 +926,7 @@ lav_file_t *lav_open_input_file(char *fi
             strcat(errmsg, ", quicktime");
 #endif
 	    strcat(errmsg, ").\n");
-            fprintf(stderr, errmsg);
+            fprintf(stderr, "%s", errmsg);
 	    free(lav_fd);
 	    internal_error = ERROR_FORMAT; /* Format not recognized */
 	    return 0;
--- mjpegtools.orig/lavtools/lavtrans.c
+++ mjpegtools/lavtools/lavtrans.c
@@ -275,7 +275,7 @@ int main(int argc, char ** argv)
    if (process_image_frame != -1)
    {
       nv = el_get_video_frame(vbuff, process_image_frame, &el);
-      sprintf(imgfname,outfile);
+      sprintf(imgfname, "%s", outfile);
       imgfd = fopen(imgfname,"wb");
       if (imgfd==0) system_error("opening image file","fopen");
       res = fwrite(vbuff,nv,1,imgfd);
@@ -307,7 +307,7 @@ int main(int argc, char ** argv)
             break;
 
          case 'i':
-            sprintf(imgfname,outfile,nframe);
+            sprintf(imgfname,"%s%d",outfile,nframe);
             imgfd = fopen(imgfname,"wb");
             if (imgfd==0) system_error("opening image file","fopen");
             res = fwrite(vbuff,nv,1,imgfd);
--- mjpegtools.orig/lavtools/jpeg2yuv.c
+++ mjpegtools/lavtools/jpeg2yuv.c
@@ -451,7 +451,7 @@ static int generate_YUV4MPEG(parameters_
            
            if (firstjpeg) {
                p = firstjpeg;
-               sprintf(jpegname, firstjpeg);
+               sprintf(jpegname, "%s", firstjpeg);
                firstjpeg = NULL;
            }
            else {
--- mjpegtools.orig/mplex/main.cpp
+++ mjpegtools/mplex/main.cpp
@@ -614,7 +614,7 @@ bool CmdLineMultiplexJob::ParseWorkaroun
                 if( flag_table[flag].longname != 0 )
                     message += sep;
             }
-            mjpeg_error( message.c_str() );
+            mjpeg_error( "%s", message.c_str() );
             return false;
         }
 
--- mjpegtools.orig/yuvfilters/yuvkineco.c
+++ mjpegtools/yuvfilters/yuvkineco.c
@@ -48,7 +48,7 @@ buf_debug(char *buf, FILE *fp, const cha
     } else {
 #ifdef MJPEGTOOLS
       buf[n] = '\0';
-      mjpeg_debug(buf);
+      mjpeg_debug("%s", buf);
 #else
       fputs(buf, stderr);
 #endif
--- mjpegtools.orig/yuvfilters/main.c
+++ mjpegtools/yuvfilters/main.c
@@ -53,7 +53,7 @@ usage(char **argv)
   char buf[1024];
 
   sprintf(buf, "Usage: %s %s", argv[0], (*MODULE.usage)());
-  WERRORL(buf);
+  mjpeg_error("%s", buf);
 }
 
 int
@@ -91,7 +91,7 @@ main(int argc, char **argv)
   if (ret == Y4M_ERR_EOF)
     ret = Y4M_OK;
   if (ret != Y4M_OK)
-    WERRORL(y4m_strerr(ret));
+    mjpeg_error("%s", y4m_strerr(ret));
 
  FINI:
   for (h = hreader; h; h = hreader) {
